## Place your answers here.
[Exercise 2]
exploit-2a.py:
trigger bugs on [http.c:421](bugs.txt) with the function 'url_decode'
>>
req 'localhost:........HACK' will be stored in variable
value'(512 bytes) with function 'url_decode'. And 'value' will be out
of bound, which corrupt return address of function 'http_request_headers'.
>>

exploit-2b.py:
trigger bugs on[http.c:255](bugs.txt) with the function 'strcat' ('pn'
variable).
>>
req "GET /HACKHACKHACK.....HACK" will be stored in variable 'pn'(1024
bytes) with function 'strcat'.And 'pn' will be out of bound, which
corrupt function pointer 'handler'.
>>
[Exercise 3]
The other buffer overflow in Exercise 1 can be exploited in this
manner.

We can overflow 'value' to corrupt return address of function
'http_request_headers', and the return address will be modified with
address of local variable 'value' in the stack. And the content of
'value' will be our shell code.We can jump to that address and execute
it as what We have done in Exercise 3.
[Exercise 4]
  [http.c:165]:
Yes,we can.It is obvious,'envvar' variable can be overflowed to
overwrite return address to 'unlink' and the parameters can be put in
'envvar' variable, too.
  [http.c:317]:
Yes,we can.It is the same as above.
