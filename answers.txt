## Place your answers here.
All the Exercises and challenge are not hard.But the strings and
XMLHttpRequest are annoying.
* Exercise 1: Cookie Theft
See Code below:  we can use the value of <input name="user".. > to
inject javascript code.Use something like user="size%3D"10">", we can
close the input tag.Then use <script></script> to inject our code.
In the script, when the request is reponsed(onload), we need to
delete unnecessary nodes to keep the website looking as before. Then
steal the cookie with the help of getItme from
https://developer.mozilla.org/en-US/docs/Web/API/document.cookie. Then
use the emacs script by encoding URL.
[users.py]
...
 args['req_user'] = Markup(request.args.get('user', ''))
...
  return render_template('users.html', **args)
...
[users.html]
...
<input type="text" name="user" value="{{ req_user }}"
size=10></nobr><br>
...
* Exercise 2: Cross-Site Request Forgery
submit returns a new page, so we make the submit target to iframe.
We can either listen to iframe onload(or just onload function) or use
setTimeout to open the html like file://home/httpd/lab/answer-2.html
1. Create form(zoobars, recpient, action) with target to an iframe
2. After submiting the form, redirect to
   http://css.csail.mit.edu/6.858/2013/.(Here we can listen to iframe
   onload event or use setTimeout).
* Exercise 3: Side Channels and Phishing.
1. use jsonp to get script from
   "http://localhost:8080/zoobar/index.cgi/zoobarjs";
2. If the user is login, then the script will put value into element
   of id='myZoobars', and we can use this to check if the user is
   login.
3. if the user is login, use method from exercise2
4. if the user is logout, present the fake login. When the user login
   the fake website, we send the username and pwd to email and
   redirect the true website.
* Exercise 4: Profile Worm.
1. First, we steal the zoobar as the same way of exercise 2
2. Then, we create a xmlHttp post request to update the victim's
   profile
3. To keep "the user whose profile is being viewed should appear to
   have 10 zoobars, and no transfer log entries.", we create a tag
   with className 10, which is used to update zoobars by showZoobars
   function.
4. Set the transfer log entries to be empty by setting the specific
   element(remove tbody1 childrens except the first child) innerHTML
   empty.
* Challenge: Password Theft.
Inject code to http://localhost:8080/zoobar/index.cgi/login.
1. Post a request to http://localhost:8080/zoobar/index.cgi/login of
   our injected code with the help of 'post' function. The 'post'
   function just create a form on the fly, and set proper (k,v).
2. The injected code do several things. First the code removes the
   warning to keep the website normal.Then it hacked the 'onclick'
   function of 'Log in' button.In the hacked 'onclick' function, we
   first get the username and pwd, then use the email script to steal
   the username and pwd.
